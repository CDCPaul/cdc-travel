{
  "rules": [
    {
      "description": "TypeScript strict 옵션을 모두 활성화해야 합니다.",
      "tsconfig": {
        "strict": true,
        "noImplicitAny": true,
        "noUnusedLocals": true,
        "strictNullChecks": true
      }
    },
    {
      "description": "any 타입 사용을 금지합니다.",
      "forbiddenTypes": ["any"]
    },
    {
      "description": "Firestore 관련 작업 시 반드시 frontend/lib/firebase.ts의 db 인스턴스를 사용해야 합니다.",
      "firestoreRule": "Firestore 쿼리, 읽기, 쓰기, 업데이트, 삭제 등 모든 데이터베이스 작업은 반드시 frontend/lib/firebase.ts에서 export한 db 인스턴스를 통해 수행해야 합니다."
    },
    {
      "description": "날짜 포맷은 반드시 frontend/lib/utils.ts의 formatDate()를 사용해야 합니다.",
      "dateFormatRule": "날짜를 문자열로 변환하거나 포맷팅할 때는 반드시 frontend/lib/utils.ts의 formatDate() 함수를 사용해야 합니다."
    },
    {
      "description": "모든 보안 API는 frontend/lib/auth.ts의 checkAuth()를 반드시 사용해야 합니다.",
      "authRule": "사용자 인증이 필요한 모든 API 또는 보안 관련 로직에서는 frontend/lib/auth.ts의 checkAuth() 함수를 통해 인증 상태를 확인해야 합니다."
    },
    {
      "description": "새로운 함수 생성 전 기존 공통 로직 확인 및 재사용",
      "priority": "high",
      "scope": "all",
      "userRule": "새로운 함수를 생성하기 전에 lib/, components/, api/ 디렉토리에서 유사한 함수나 모듈이 이미 있는지 반드시 확인하세요. 이미 존재하는 공통 로직은 재사용해야 하며, 새로 만들지 않아야 합니다."
    }
  ]
} 